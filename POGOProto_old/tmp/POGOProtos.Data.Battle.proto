syntax = "proto3";
package POGOProtos.Data.Battle;

import public "POGOProtos.Enums.proto";
import public "POGOProtos.Data.proto";
import public "POGOProtos.Data.Gym.proto";
import public "POGOProtos.Data.Raid.proto";
import public "POGOProtos.Inventory.proto";
import public "POGOProtos.Data.Badge.proto";
import public "POGOProtos.Data.Friends.proto";
import public "POGOProtos.Data.Player.proto";
import public "POGOProtos.Map.Pokemon.proto";

enum BattleType {
	BATTLE_TYPE_UNSET = 0;
	BATTLE_TYPE_NORMAL = 1;
	BATTLE_TYPE_TRAINING = 2;
	BATTLE_TYPE_RAID = 3;
}

message Battle {
	int64 battle_start_ms = 1;
	int64 battle_end_ms = 2;
	string battle_id = 3;
	.POGOProtos.Data.Battle.BattleParticipant defender = 4;
	.POGOProtos.Data.Battle.BattleLog battle_log = 5;
	.POGOProtos.Data.Battle.BattleParticipant attacker = 6;
	.POGOProtos.Enums.WeatherCondition weather_condition = 7;
	.POGOProtos.Enums.FriendshipLevelMilestone highest_friendship_milestone = 8;
}

message BattlePokemonInfo {
	.POGOProtos.Data.PokemonData pokemon_data = 1;
	int32 current_health = 2;
	int32 current_energy = 3;
}

message BattleUpdate {
	.POGOProtos.Data.Battle.BattleLog battle_log = 1;
	string battle_id = 2;
	.POGOProtos.Data.Battle.BattlePokemonInfo active_defender = 3;
	.POGOProtos.Data.Battle.BattlePokemonInfo active_attacker = 4;
	.POGOProtos.Enums.FriendshipLevelMilestone highest_friendship_milestone = 5;
}

message BattleLog {
	.POGOProtos.Data.Battle.BattleState state = 1;
	.POGOProtos.Data.Battle.BattleType battle_type = 2;
	int64 server_ms = 3;
	repeated .POGOProtos.Data.Battle.BattleAction battle_actions = 4;
	int64 battle_start_timestamp_ms = 5;
	int64 battle_end_timestamp_ms = 6;
}

message BattleResults {
	.POGOProtos.Data.Gym.GymState gym_state = 1;
	repeated .POGOProtos.Data.Battle.BattleParticipant attackers = 2;
	repeated int32 player_xp_awarded = 3;
	int64 next_defender_pokemon_id = 4;
	int32 gym_points_delta = 5;
	.POGOProtos.Data.Gym.GymStatusAndDefenders gym_status = 6;
	repeated .POGOProtos.Data.Raid.Participation participation = 7;
	repeated .POGOProtos.Inventory.Loot raid_item_rewards = 8;
	repeated .POGOProtos.Data.Raid.RaidEncounter post_raid_encounter = 9;
	repeated .POGOProtos.Data.Badge.AwardedGymBadge gym_badge = 10;
	repeated .POGOProtos.Inventory.Loot default_raid_item_rewards = 11;
}

message BattleParties {
	repeated .POGOProtos.Data.Battle.BattleParty battle_parties = 1;
}

message BattleAction {
	.POGOProtos.Data.Battle.BattleActionType type = 1;
	int64 action_start_ms = 2;
	int32 duration_ms = 3;
	int32 energy_delta = 5;
	int32 attacker_index = 6;
	int32 target_index = 7;
	uint64 active_pokemon_id = 8;
	.POGOProtos.Data.Battle.BattleParticipant player_joined = 9;
	.POGOProtos.Data.Battle.BattleResults battle_results = 10;
	int64 damage_windows_start_timestamp_ms = 11;
	int64 damage_windows_end_timestamp_ms = 12;
	.POGOProtos.Data.Battle.BattleParticipant player_left = 13;
	uint64 target_pokemon_id = 14;
	.POGOProtos.Data.Friends.LeveledUpFriends leveled_up_friends = 15;
}

message BattleParty {
	string name = 1;
	int32 team_number = 2;
	repeated uint64 ids = 3;
	string combat_league_id = 4;
}

message BattleParticipant {
	.POGOProtos.Data.Battle.BattlePokemonInfo active_pokemon = 1;
	.POGOProtos.Data.Player.PlayerPublicProfile trainer_public_profile = 2;
	repeated .POGOProtos.Data.Battle.BattlePokemonInfo reverse_pokemon = 3;
	repeated .POGOProtos.Data.Battle.BattlePokemonInfo defeated_pokemon = 4;
	repeated .POGOProtos.Map.Pokemon.LobbyPokemon lobby_pokemon = 5;
	int32 damage_dealt = 6;
	bool super_effective_charge_move = 7;
	bool weather_boosted = 8;
	.POGOProtos.Enums.FriendshipLevelMilestone highest_friendship_milestone = 9;
	repeated string friend_codename = 10;
}

enum BattleActionType {
	ACTION_UNSET = 0;
	ACTION_ATTACK = 1;
	ACTION_DODGE = 2;
	ACTION_SPECIAL_ATTACK = 3;
	ACTION_SWAP_POKEMON = 4;
	ACTION_FAINT = 5;
	ACTION_PLAYER_JOIN = 6;
	ACTION_PLAYER_QUIT = 7;
	ACTION_VICTORY = 8;
	ACTION_DEFEAT = 9;
	ACTION_TIMED_OUT = 10;
	ACTION_SPECIAL_ATTACK_2 = 11;
}

enum BattleState {
	STATE_UNSET = 0;
	ACTIVE = 1;
	VICTORY = 2;
	DEFEATED = 3;
	TIMED_OUT = 4;
}

