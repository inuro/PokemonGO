/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

goog.provide('proto.POGOProtos.Settings.MapSettings');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.POGOProtos.Settings.MapSettings = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.POGOProtos.Settings.MapSettings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.POGOProtos.Settings.MapSettings.displayName = 'proto.POGOProtos.Settings.MapSettings';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.POGOProtos.Settings.MapSettings.prototype.toObject = function(opt_includeInstance) {
  return proto.POGOProtos.Settings.MapSettings.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.POGOProtos.Settings.MapSettings} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.POGOProtos.Settings.MapSettings.toObject = function(includeInstance, msg) {
  var f, obj = {
    pokemonVisibleRange: +jspb.Message.getFieldWithDefault(msg, 1, 0.0),
    pokeNavRangeMeters: +jspb.Message.getFieldWithDefault(msg, 2, 0.0),
    encounterRangeMeters: +jspb.Message.getFieldWithDefault(msg, 3, 0.0),
    getMapObjectsMinRefreshSeconds: +jspb.Message.getFieldWithDefault(msg, 4, 0.0),
    getMapObjectsMaxRefreshSeconds: +jspb.Message.getFieldWithDefault(msg, 5, 0.0),
    getMapObjectsMinDistanceMeters: +jspb.Message.getFieldWithDefault(msg, 6, 0.0),
    googleMapsApiKey: jspb.Message.getFieldWithDefault(msg, 7, ""),
    minNearbyHideSightings: jspb.Message.getFieldWithDefault(msg, 8, 0),
    enableSpecialWeather: jspb.Message.getFieldWithDefault(msg, 9, false),
    specialWeatherProbability: +jspb.Message.getFieldWithDefault(msg, 10, 0.0),
    googleMapsClientId: jspb.Message.getFieldWithDefault(msg, 11, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.POGOProtos.Settings.MapSettings}
 */
proto.POGOProtos.Settings.MapSettings.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.POGOProtos.Settings.MapSettings;
  return proto.POGOProtos.Settings.MapSettings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.POGOProtos.Settings.MapSettings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.POGOProtos.Settings.MapSettings}
 */
proto.POGOProtos.Settings.MapSettings.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPokemonVisibleRange(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPokeNavRangeMeters(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setEncounterRangeMeters(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setGetMapObjectsMinRefreshSeconds(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setGetMapObjectsMaxRefreshSeconds(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setGetMapObjectsMinDistanceMeters(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setGoogleMapsApiKey(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMinNearbyHideSightings(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableSpecialWeather(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setSpecialWeatherProbability(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setGoogleMapsClientId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.POGOProtos.Settings.MapSettings.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.POGOProtos.Settings.MapSettings.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.POGOProtos.Settings.MapSettings} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.POGOProtos.Settings.MapSettings.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPokemonVisibleRange();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getPokeNavRangeMeters();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getEncounterRangeMeters();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getGetMapObjectsMinRefreshSeconds();
  if (f !== 0.0) {
    writer.writeFloat(
      4,
      f
    );
  }
  f = message.getGetMapObjectsMaxRefreshSeconds();
  if (f !== 0.0) {
    writer.writeFloat(
      5,
      f
    );
  }
  f = message.getGetMapObjectsMinDistanceMeters();
  if (f !== 0.0) {
    writer.writeFloat(
      6,
      f
    );
  }
  f = message.getGoogleMapsApiKey();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getMinNearbyHideSightings();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getEnableSpecialWeather();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getSpecialWeatherProbability();
  if (f !== 0.0) {
    writer.writeFloat(
      10,
      f
    );
  }
  f = message.getGoogleMapsClientId();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional double pokemon_visible_range = 1;
 * @return {number}
 */
proto.POGOProtos.Settings.MapSettings.prototype.getPokemonVisibleRange = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.POGOProtos.Settings.MapSettings.prototype.setPokemonVisibleRange = function(value) {
  jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double poke_nav_range_meters = 2;
 * @return {number}
 */
proto.POGOProtos.Settings.MapSettings.prototype.getPokeNavRangeMeters = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.POGOProtos.Settings.MapSettings.prototype.setPokeNavRangeMeters = function(value) {
  jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double encounter_range_meters = 3;
 * @return {number}
 */
proto.POGOProtos.Settings.MapSettings.prototype.getEncounterRangeMeters = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.POGOProtos.Settings.MapSettings.prototype.setEncounterRangeMeters = function(value) {
  jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional float get_map_objects_min_refresh_seconds = 4;
 * @return {number}
 */
proto.POGOProtos.Settings.MapSettings.prototype.getGetMapObjectsMinRefreshSeconds = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 4, 0.0));
};


/** @param {number} value */
proto.POGOProtos.Settings.MapSettings.prototype.setGetMapObjectsMinRefreshSeconds = function(value) {
  jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional float get_map_objects_max_refresh_seconds = 5;
 * @return {number}
 */
proto.POGOProtos.Settings.MapSettings.prototype.getGetMapObjectsMaxRefreshSeconds = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 5, 0.0));
};


/** @param {number} value */
proto.POGOProtos.Settings.MapSettings.prototype.setGetMapObjectsMaxRefreshSeconds = function(value) {
  jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional float get_map_objects_min_distance_meters = 6;
 * @return {number}
 */
proto.POGOProtos.Settings.MapSettings.prototype.getGetMapObjectsMinDistanceMeters = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 6, 0.0));
};


/** @param {number} value */
proto.POGOProtos.Settings.MapSettings.prototype.setGetMapObjectsMinDistanceMeters = function(value) {
  jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional string google_maps_api_key = 7;
 * @return {string}
 */
proto.POGOProtos.Settings.MapSettings.prototype.getGoogleMapsApiKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.POGOProtos.Settings.MapSettings.prototype.setGoogleMapsApiKey = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional int32 min_nearby_hide_sightings = 8;
 * @return {number}
 */
proto.POGOProtos.Settings.MapSettings.prototype.getMinNearbyHideSightings = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.POGOProtos.Settings.MapSettings.prototype.setMinNearbyHideSightings = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional bool enable_special_weather = 9;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.POGOProtos.Settings.MapSettings.prototype.getEnableSpecialWeather = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 9, false));
};


/** @param {boolean} value */
proto.POGOProtos.Settings.MapSettings.prototype.setEnableSpecialWeather = function(value) {
  jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional float special_weather_probability = 10;
 * @return {number}
 */
proto.POGOProtos.Settings.MapSettings.prototype.getSpecialWeatherProbability = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 10, 0.0));
};


/** @param {number} value */
proto.POGOProtos.Settings.MapSettings.prototype.setSpecialWeatherProbability = function(value) {
  jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * optional string google_maps_client_id = 11;
 * @return {string}
 */
proto.POGOProtos.Settings.MapSettings.prototype.getGoogleMapsClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.POGOProtos.Settings.MapSettings.prototype.setGoogleMapsClientId = function(value) {
  jspb.Message.setProto3StringField(this, 11, value);
};


