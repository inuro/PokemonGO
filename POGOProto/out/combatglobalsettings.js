/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

goog.provide('proto.POGOProtos.Settings.CombatGlobalSettings');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.POGOProtos.Settings.CombatGlobalSettings = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.POGOProtos.Settings.CombatGlobalSettings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.POGOProtos.Settings.CombatGlobalSettings.displayName = 'proto.POGOProtos.Settings.CombatGlobalSettings';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.POGOProtos.Settings.CombatGlobalSettings.prototype.toObject = function(opt_includeInstance) {
  return proto.POGOProtos.Settings.CombatGlobalSettings.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.POGOProtos.Settings.CombatGlobalSettings} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.POGOProtos.Settings.CombatGlobalSettings.toObject = function(includeInstance, msg) {
  var f, obj = {
    enableCombat: jspb.Message.getFieldWithDefault(msg, 1, false),
    maximumDailyRewardedBattles: jspb.Message.getFieldWithDefault(msg, 2, 0),
    enableCombatStatStages: jspb.Message.getFieldWithDefault(msg, 3, false),
    minimumPlayerLevel: jspb.Message.getFieldWithDefault(msg, 4, 0),
    maximumDailyNpcRewardedBattles: jspb.Message.getFieldWithDefault(msg, 5, 0),
    activeCombatUpdateIntervalMs: jspb.Message.getFieldWithDefault(msg, 6, 0),
    waitingForPlayerUpdateIntervalMs: jspb.Message.getFieldWithDefault(msg, 7, 0),
    readyForBattleUpdateIntervalMs: jspb.Message.getFieldWithDefault(msg, 8, 0),
    preMoveSubmitWindowMs: jspb.Message.getFieldWithDefault(msg, 9, 0),
    postMoveSubmitWindowMs: jspb.Message.getFieldWithDefault(msg, 10, 0),
    enableSockets: jspb.Message.getFieldWithDefault(msg, 11, false),
    enableSpinMinigame: jspb.Message.getFieldWithDefault(msg, 12, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.POGOProtos.Settings.CombatGlobalSettings}
 */
proto.POGOProtos.Settings.CombatGlobalSettings.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.POGOProtos.Settings.CombatGlobalSettings;
  return proto.POGOProtos.Settings.CombatGlobalSettings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.POGOProtos.Settings.CombatGlobalSettings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.POGOProtos.Settings.CombatGlobalSettings}
 */
proto.POGOProtos.Settings.CombatGlobalSettings.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableCombat(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaximumDailyRewardedBattles(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableCombatStatStages(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMinimumPlayerLevel(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaximumDailyNpcRewardedBattles(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setActiveCombatUpdateIntervalMs(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWaitingForPlayerUpdateIntervalMs(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setReadyForBattleUpdateIntervalMs(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPreMoveSubmitWindowMs(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPostMoveSubmitWindowMs(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableSockets(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableSpinMinigame(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.POGOProtos.Settings.CombatGlobalSettings.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.POGOProtos.Settings.CombatGlobalSettings.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.POGOProtos.Settings.CombatGlobalSettings} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.POGOProtos.Settings.CombatGlobalSettings.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnableCombat();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getMaximumDailyRewardedBattles();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getEnableCombatStatStages();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getMinimumPlayerLevel();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getMaximumDailyNpcRewardedBattles();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getActiveCombatUpdateIntervalMs();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getWaitingForPlayerUpdateIntervalMs();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getReadyForBattleUpdateIntervalMs();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getPreMoveSubmitWindowMs();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getPostMoveSubmitWindowMs();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getEnableSockets();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getEnableSpinMinigame();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
};


/**
 * optional bool enable_combat = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.POGOProtos.Settings.CombatGlobalSettings.prototype.getEnableCombat = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.POGOProtos.Settings.CombatGlobalSettings.prototype.setEnableCombat = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional int32 maximum_daily_rewarded_battles = 2;
 * @return {number}
 */
proto.POGOProtos.Settings.CombatGlobalSettings.prototype.getMaximumDailyRewardedBattles = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.POGOProtos.Settings.CombatGlobalSettings.prototype.setMaximumDailyRewardedBattles = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bool enable_combat_stat_stages = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.POGOProtos.Settings.CombatGlobalSettings.prototype.getEnableCombatStatStages = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.POGOProtos.Settings.CombatGlobalSettings.prototype.setEnableCombatStatStages = function(value) {
  jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional uint32 minimum_player_level = 4;
 * @return {number}
 */
proto.POGOProtos.Settings.CombatGlobalSettings.prototype.getMinimumPlayerLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.POGOProtos.Settings.CombatGlobalSettings.prototype.setMinimumPlayerLevel = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 maximum_daily_npc_rewarded_battles = 5;
 * @return {number}
 */
proto.POGOProtos.Settings.CombatGlobalSettings.prototype.getMaximumDailyNpcRewardedBattles = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.POGOProtos.Settings.CombatGlobalSettings.prototype.setMaximumDailyNpcRewardedBattles = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 active_combat_update_interval_ms = 6;
 * @return {number}
 */
proto.POGOProtos.Settings.CombatGlobalSettings.prototype.getActiveCombatUpdateIntervalMs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.POGOProtos.Settings.CombatGlobalSettings.prototype.setActiveCombatUpdateIntervalMs = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 waiting_for_player_update_interval_ms = 7;
 * @return {number}
 */
proto.POGOProtos.Settings.CombatGlobalSettings.prototype.getWaitingForPlayerUpdateIntervalMs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.POGOProtos.Settings.CombatGlobalSettings.prototype.setWaitingForPlayerUpdateIntervalMs = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 ready_for_battle_update_interval_ms = 8;
 * @return {number}
 */
proto.POGOProtos.Settings.CombatGlobalSettings.prototype.getReadyForBattleUpdateIntervalMs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.POGOProtos.Settings.CombatGlobalSettings.prototype.setReadyForBattleUpdateIntervalMs = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 pre_move_submit_window_ms = 9;
 * @return {number}
 */
proto.POGOProtos.Settings.CombatGlobalSettings.prototype.getPreMoveSubmitWindowMs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.POGOProtos.Settings.CombatGlobalSettings.prototype.setPreMoveSubmitWindowMs = function(value) {
  jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int32 post_move_submit_window_ms = 10;
 * @return {number}
 */
proto.POGOProtos.Settings.CombatGlobalSettings.prototype.getPostMoveSubmitWindowMs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.POGOProtos.Settings.CombatGlobalSettings.prototype.setPostMoveSubmitWindowMs = function(value) {
  jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional bool enable_sockets = 11;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.POGOProtos.Settings.CombatGlobalSettings.prototype.getEnableSockets = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 11, false));
};


/** @param {boolean} value */
proto.POGOProtos.Settings.CombatGlobalSettings.prototype.setEnableSockets = function(value) {
  jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional bool enable_spin_minigame = 12;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.POGOProtos.Settings.CombatGlobalSettings.prototype.getEnableSpinMinigame = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 12, false));
};


/** @param {boolean} value */
proto.POGOProtos.Settings.CombatGlobalSettings.prototype.setEnableSpinMinigame = function(value) {
  jspb.Message.setProto3BooleanField(this, 12, value);
};


